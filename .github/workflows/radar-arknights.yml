name: Update Arknights Contents
on:
  workflow_dispatch:
  workflow_call:
    secrets:
      GH_DEPLOY:
        required: true
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Config JSON
        shell: bash
        run: |
          git clone \
            --depth 1  \
            --filter=blob:none \
            --sparse \
            https://${{ secrets.GH_DEPLOY }}@github.com/sshockwave/data-arknights \
            arknights
          cd arknights
          git sparse-checkout set hot_update_list.json
      - uses: actions/checkout@v3
        with:
          repository: 'sshockwave/DevOps'
          path: devops
      - name: Install Dependencies
        shell: bash
        run: |
          pip install requests
      - name: Check for Updates
        id: check
        shell: bash
        run: |
          if python devops/radar/arknights/main.py -n -o ./arknights -j 1
          then
            echo ::set-output name=need_update::true
          fi
    outputs:
      need_update: ${{ steps.check.outputs.need_update }}
  update:
    needs: [check]
    runs-on: ubuntu-latest
    if: ${{ needs.check.outputs.need_update == 'true' }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'sshockwave/data-arknights'
          path: arknights
          token: ${{ secrets.GH_DEPLOY }}
      - uses: actions/checkout@v3
        with:
          repository: 'sshockwave/DevOps'
          path: devops
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: latest
          miniforge-variant: Mambaforge
      - uses: actions/checkout@v3
        with:
          repository: 'HearthSim/UnityPack'
          path: unitypack
      - name: Install Dependencies
        shell: bash -l {0}
        run: |
          mamba install "python>=3.9" libjxl -c sshockwave -c conda-forge
          cd unitypack
          pip install .
          cd ..
          cd devops/radar/arknights
          pip install -r requirements.txt
      - name: Update Contents
        shell: bash -l {0}
        run: |
          python devops/radar/arknights/main.py -o ./arknights -j 1
      - name: Push to Remote
        shell: bash -l {0}
        run: |
          git config --global user.name "Action Bot"
          git config --global user.email "action@github.com"
          version=$(python devops/radar/arknights/get_version.py -o ./arknights)
          cd arknights/
          git add -A
          if git commit -m "Update version $version"
          then
            git push
          fi
