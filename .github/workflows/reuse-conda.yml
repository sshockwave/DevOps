name: Build and Publish Conda Package
on:
  workflow_call:
    inputs:
      recipe_name:
        required: true
        type: string
    secrets:
      anaconda_token:
        required: false
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: latest
          miniforge-variant: Mambaforge
      - name: Install Dependencies
        shell: bash -l {0}
        run: |
          mamba install conda-verify boa
      - uses: actions/checkout@v2
      - name: Build Package
        shell: bash -l {0}
        run: |
          conda mambabuild ./conda/"${{ inputs.recipe_name }}" -c sshockwave
          mkdir -p ./artifact
          cp "$CONDA_PREFIX"/conda-bld/*/*.tar.bz2 ./artifact
      - uses: actions/upload-artifact@v3
        with:
          path: ./artifact
      # https://github.com/actions/runner/issues/520
      - name: Before Deploy
        shell: bash -l {0}
        id: check_deploy
        run: |
          if [[ "${{ secrets.anaconda_token }}" != "" ]]
          then
            echo "::set-output name=do_deploy::true"
          fi
    outputs:
      do_deploy: ${{ steps.check_deploy.outputs.do_deploy }}
  deploy:
    needs: [ build ]
    if: needs.build.outputs.do_deploy == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: latest
          miniforge-variant: Mambaforge
      - name: Install dependency
        shell: bash -l {0}
        run: |
          mamba install anaconda-client
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: ./
      - name: Publish to Anaconda
        shell: bash -l {0}
        run: |
          anaconda --token "${{ secrets.anaconda_token }}" upload --force ./*.tar.bz2
